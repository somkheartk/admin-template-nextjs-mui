name: Deploy to Development

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  ENVIRONMENT: development
  REGISTRY: ghcr.io
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend

jobs:
  build-and-deploy-frontend:
    name: Build and Deploy Frontend (Dev)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.DEV_API_URL }}
          NODE_ENV: production
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=dev-
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      # Deployment step (uncomment and configure for your deployment target)
      # - name: Deploy to Dev Environment
      #   run: |
      #     # Add deployment commands here (e.g., kubectl, ssh, etc.)
      #     echo "Deploying to development environment..."
      
      - name: Notify deployment status
        if: always()
        run: |
          echo "Frontend deployment to DEV: ${{ job.status }}"
          echo "Image: ${{ steps.meta.outputs.tags }}"

  build-and-deploy-backend:
    name: Build and Deploy Backend (Dev)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Run tests
        working-directory: ./backend
        run: npm test
        env:
          MONGODB_URI: ${{ secrets.DEV_MONGODB_URI }}
          JWT_SECRET: ${{ secrets.DEV_JWT_SECRET }}
          NODE_ENV: test
      
      - name: Build application
        working-directory: ./backend
        run: npm run build
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=dev-
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      # Deployment step (uncomment and configure for your deployment target)
      # - name: Deploy to Dev Environment
      #   run: |
      #     # Add deployment commands here (e.g., kubectl, ssh, etc.)
      #     echo "Deploying to development environment..."
      
      - name: Notify deployment status
        if: always()
        run: |
          echo "Backend deployment to DEV: ${{ job.status }}"
          echo "Image: ${{ steps.meta.outputs.tags }}"
